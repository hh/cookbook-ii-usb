#!/bin/sh


# The initramfs doesn't have chroot or dpkg, but our installer is mounted under /root!

TMPVT=8
CHROOT="/root/usr/sbin/chroot /root"

cp -v /root/isodevice/chef-repo/cookbooks/ii-ubiquity/files/default/swedishChef.png /lib/plymouth/themes/ubuntu-logo/ubuntu_logo.png | tee -a /root/initramfs_command.log > /dev/tty$TMPVT 
plymouth hide-splash
plymouth show-splash


$CHROOT chvt $TMPVT
#cp -v /root/isodevice/chef-repo/cookbooks/ii-ubiquity/files/default/ubuntu_logo*png /lib/plymouth/themes/ubuntu-logo \
if [ ! -d /root/opt/chef ]
then
  $CHROOT dpkg -i /isodevice/cache/<%=::File.basename(node['ii-usb']['chef-deb']['src']['cache'])%> | tee -a /root/initramfs_command.log > /dev/tty$TMPVT
fi
echo WE NEED A NEW COOKBOOK FOR THIS | tee -a /root/initramfs_command.log > /dev/tty$TMPVT
$CHROOT chef-solo -c /isodevice/ubiquity-initramfs-persistent-solo.rb | tee -a /root/initramfs_command.log > /dev/tty$TMPVT
sleep <%=node['ii-usb']['chvt']['sleep'] %>
$CHROOT chvt 7

# /root is your installers fs
# /root/cdrom is the mounted version of the iso file
# /root/isodevice is the usb we booted from
# to run this you need 
# d-i preseed/early_command string /root/isodevice/initramfs_command.sh
# it is picked up by casper-bottom

# These helped me debug:
# ls -la /sbin /bin > /root/ls-bins-from-initramfs.txt
# ls -la / > /root/ls-root-from-initramfs.txt
# df > /root/df-from-initramfs.txt

# within the casper/squashfs / I wanted to quickly change the pulsing logo
# Would probably be more interesting to make a custom plymouth theme

#/root/usr/sbin/chroot /root open -c 8 -- dpkg -i /isodevice/cache/<%=::File.basename(node['ii-usb']['chef-deb']['src']['cache'])%> > /root/chef-install-before-ubiquity-or-gui.txt

# Running chef-solo here would allow us to modify everything

# This was Interesting, but squashfs doesn't register as a valid chef-platform
#ln -s /root/opt /opt
#LD_LIBRARY_PATH=/root/lib/x86_64-linux-gnu /root/opt/chef/embedded/bin/ruby /root/opt/chef/bin/chef-solo -c /root/isodevice/chef-repo/ubiquity-initramfs-initrd-solo.rb

# Running chef-solo here would allow us to modify everything
# within the installer squashfs... ie wireless networks

# It would also be possi
#/root/usr/sbin/chroot /root chef-client -c /isodevice/ubiquity-initramfs-client.rb

# Nice to get a prompt for debugging.. but using open seems to keep the boot from progressing

#/root/bin/open -c 8 /bin/sh # in the initrd alone (busybox)
#/root/usr/sbin/chroot /root open -c 9 /bin/bash # in the capser/squashfs
# sleep 9999
